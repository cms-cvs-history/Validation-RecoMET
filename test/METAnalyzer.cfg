process TEST  = 
{
   include "Configuration/ReleaseValidation/data/Services.cfi"
   include "FWCore/MessageLogger/data/MessageLogger.cfi"

   include "Configuration/JetMET/data/calorimetry-digitization.cff"
   include "Configuration/EventContent/data/FEVTOutput.cff"

   include "RecoMET/METProducers/data/GenMET.cfi"
   include "RecoMET/METProducers/test/CaloCandidatesFromDigis.cfi"
   include "RecoMET/METProducers/data/CaloMET.cfi"

   es_module = TrackerGeometricDetESModule {}

   service = DaqMonitorROOTBackEnd{ }
   module metAnalyzer = METTester
   {
      string InputGenMETLabel  = 'genMet'
      string InputCaloMETLabel = 'met'
      untracked string outputFile = 'RecoMET-ValHist-_FILE_'
      double CaloMExResFitMin           = 770.0
      double CaloMExResFitMax           = 1800.0
      int32  CaloMExResHistoSumETNumBin = 10
      double CaloMExResHistoLowSumET    = 770.0
      double CaloMExResHistoHighSumET   = 1800.0
      int32  CaloMExResHistoMExNumBin   = 10
      double CaloMExResHistoLowMEx      = -199.0
      double CaloMExResHistoHighMEx     = 200.0
   }

   source = PoolSource 
   {
      untracked vstring fileNames = {'file:data/_FILE_'}
      untracked int32 maxEvents = -1
      untracked uint32 debugVebosity = 10
      untracked bool   debugFlag     = true
   }
   module DIGI-RECO = PoolOutputModule 
   {
      untracked string fileName = "RecoMET-_FILE_"
      untracked uint32 commitInterval = 10
      untracked vstring outputCommands = 
      {
         "drop *",
         "keep recoCaloMETs_*_*_*",
         "keep recoGenMETs_*_*_*"
      }
   }
   path p2   = { caloDigi }
   path p3   = { genCandidatesForMET, genMet, caloCandidatesForMET, met }
   path p4   = { metAnalyzer }
   endpath e = { DIGI-RECO }
   schedule  = { p2, p3, p4, e}
}
